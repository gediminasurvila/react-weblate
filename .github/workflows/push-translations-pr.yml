name: Propose en.json Update to Translation Repo

on:
  workflow_dispatch:

permissions:
  contents: write # Needed for creating a branch and PR
  pull-requests: write # Needed for creating a PR

jobs:
  propose-en-json-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main app repo (Source)
        uses: actions/checkout@v4
        with:
          path: "./source-app-repo" # Checkout into a dedicated sub-directory

      - name: Configure Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Clone translations repo (Target)
        run: |
          git clone https://gediminasurvila:${{ secrets.WEBLATE_PUSH_TOKEN }}@github.com/gediminasurvila/react-weblate-i18n.git translations-repo
        working-directory: "./" # Ensure clone happens in the root of the runner's workspace

      - name: Show contents before copy
        run: |
          echo "Source en.json from app repo:"
          cat ./source-app-repo/public/translations/locales/en.json
          echo "Target en.json from translations repo BEFORE copy:"
          cat ./translations-repo/locales/en.json || echo "File not found in target before copy"

      - name: Copy updated en.json
        run: |
          cp -f ./source-app-repo/public/translations/locales/en.json ./translations-repo/locales/en.json
          # Use -f (force) to ensure overwrite
          echo "Copy complete."

      - name: Show contents after copy and diff against HEAD
        working-directory: translations-repo
        run: |
          echo "Target en.json from translations repo AFTER copy:"
          cat locales/en.json
          echo "Diff against HEAD of main branch:"
          git diff HEAD -- locales/en.json || true # Shows changes in working dir vs last commit

      - name: Check for changes and set output
        id: check_changes
        working-directory: translations-repo
        run: |
          git add locales/en.json
          echo "Git status after add:"
          git status --porcelain # Use --porcelain for cleaner output

          # Check if there are any staged changes.
          # If git diff --cached --quiet returns non-zero, it means there ARE changes.
          if git diff --cached --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected by git diff --cached --quiet (locales/en.json is same as HEAD)."
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected by git diff --cached --quiet. Proceeding to create PR."
          fi

      - name: Create branch and commit if changes exist
        if: steps.check_changes.outputs.has_changes == 'true'
        working-directory: translations-repo
        run: |
          BRANCH_NAME="feat/update-en-json-${{ github.sha }}" # Use commit SHA for unique branch name
          echo "Attempting to checkout branch: $BRANCH_NAME"
          # Ensure you are on a branch, often `main` by default, before creating a new one
          git checkout main # Ensure we are on main before branching
          git checkout -b $BRANCH_NAME
          echo "Committing changes..."
          git commit -m "chore: update source language file en.json from ${{ github.repository }}@${{ github.ref_name }}"
          echo "Pushing branch: $BRANCH_NAME"
          git push origin $BRANCH_NAME

      - name: Create Pull Request
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: repo-sync/pull-request@v2
        with:
          source_branch: feat/update-en-json-${{ github.sha }}
          destination_branch: main
          github_token: ${{ secrets.WEBLATE_PUSH_TOKEN }}
          pr_title: "chore: Automated en.json update from app repo"
          pr_body: |
            This PR proposes an automated update to the `en.json` source language file.
            The changes originate from the main application repository (`${{ github.repository }}`) on branch `${{ github.ref_name }}`, commit `${{ github.sha }}`.
            Please review and merge if appropriate.
          pr_allow_empty: false
          pr_draft: false
